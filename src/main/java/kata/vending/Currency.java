package kata.vending;/** * Represents the various types of currency and contains coin conversion logic. */public enum Currency {    /**     * Nickel.     */    NICKEL (5L, new Coin(Coin.Size.MEDIUM, Coin.Weight.HEAVY)),    /**     * Dime.     */    DIME (10L, new Coin(Coin.Size.SMALL, Coin.Weight.LIGHT)),    /**     * Quarter.     */    QUARTER (25L, new Coin(Coin.Size.LARGE, Coin.Weight.HEAVY)),    /**     * Any other type of coin or currency that we aren't aware of.     */    UNKNOWN (0L, null);    /**     * The number of cents that this currency represents.     */    private final Long cents;    public Long getCents() {        return cents;    }    /**     * The coin that represents the currency.     */    private final Coin coin;    public Coin getCoin() {        return coin;    }    /**     * Currency enum constructor.     * @param cents number of cents of the currency     * @param coin the coin that the currency is represented by     */    Currency(final Long cents, final Coin coin) {        this.cents = cents;        this.coin = coin;    }    /**     * Classifies a coin of some size and weight as the appropriate currency.     * @param coin coin to assess     * @return the appropriate currency classification for the coin     */    public static Currency toCurrency(final Coin coin) {        if (coin == DIME.coin) {            return DIME;        }        if (coin == NICKEL.coin) {            return NICKEL;        }        if (coin == QUARTER.coin) {            return QUARTER;        }        return UNKNOWN;    }}